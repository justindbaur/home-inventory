// <auto-generated />
using System;
using HomeInventory.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HomeInventory.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20201018005357_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8");

            modelBuilder.Entity("HomeInventory.Shared.Entities.Item", b =>
                {
                    b.Property<string>("BarcodeNum")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<double>("Quantity")
                        .HasColumnType("REAL");

                    b.Property<double>("Size")
                        .HasColumnType("REAL");

                    b.Property<string>("UOMName")
                        .HasColumnType("TEXT");

                    b.HasKey("BarcodeNum");

                    b.HasIndex("UOMName");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("HomeInventory.Shared.Entities.ItemInstance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ExpireDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ItemBarcodeNum")
                        .HasColumnType("TEXT");

                    b.Property<double>("Quantity")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("ItemBarcodeNum");

                    b.ToTable("ItemInstances");
                });

            modelBuilder.Entity("HomeInventory.Shared.Entities.UnitOfMeasure", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Abbreviation")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsConvertible")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCustom")
                        .HasColumnType("INTEGER");

                    b.HasKey("Name");

                    b.ToTable("UnitOfMeasures");

                    b.HasData(
                        new
                        {
                            Name = "Ounce",
                            Abbreviation = "oz",
                            IsConvertible = true,
                            IsCustom = false
                        },
                        new
                        {
                            Name = "Feet",
                            Abbreviation = "ft",
                            IsConvertible = true,
                            IsCustom = false
                        },
                        new
                        {
                            Name = "Gallon",
                            Abbreviation = "gal",
                            IsConvertible = true,
                            IsCustom = false
                        },
                        new
                        {
                            Name = "Gram",
                            Abbreviation = "gm",
                            IsConvertible = true,
                            IsCustom = false
                        },
                        new
                        {
                            Name = "Inch",
                            Abbreviation = "in",
                            IsConvertible = true,
                            IsCustom = false
                        },
                        new
                        {
                            Name = "Liter",
                            Abbreviation = "ltr",
                            IsConvertible = true,
                            IsCustom = false
                        },
                        new
                        {
                            Name = "Meter",
                            Abbreviation = "m",
                            IsConvertible = true,
                            IsCustom = false
                        },
                        new
                        {
                            Name = "Pint",
                            Abbreviation = "pt",
                            IsConvertible = true,
                            IsCustom = false
                        },
                        new
                        {
                            Name = "Pound",
                            Abbreviation = "lb",
                            IsConvertible = true,
                            IsCustom = false
                        },
                        new
                        {
                            Name = "Yard",
                            Abbreviation = "yd",
                            IsConvertible = true,
                            IsCustom = false
                        });
                });

            modelBuilder.Entity("HomeInventory.Shared.Entities.UnitOfMeasureConversion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FromUOMName")
                        .HasColumnType("TEXT");

                    b.Property<string>("ToUOMName")
                        .HasColumnType("TEXT");

                    b.Property<float>("Value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("FromUOMName");

                    b.HasIndex("ToUOMName");

                    b.ToTable("UnitOfMeasureConversions");
                });

            modelBuilder.Entity("HomeInventory.Shared.Entities.Item", b =>
                {
                    b.HasOne("HomeInventory.Shared.Entities.UnitOfMeasure", "UOM")
                        .WithMany()
                        .HasForeignKey("UOMName");
                });

            modelBuilder.Entity("HomeInventory.Shared.Entities.ItemInstance", b =>
                {
                    b.HasOne("HomeInventory.Shared.Entities.Item", "Item")
                        .WithMany("Instances")
                        .HasForeignKey("ItemBarcodeNum");
                });

            modelBuilder.Entity("HomeInventory.Shared.Entities.UnitOfMeasureConversion", b =>
                {
                    b.HasOne("HomeInventory.Shared.Entities.UnitOfMeasure", "FromUOM")
                        .WithMany()
                        .HasForeignKey("FromUOMName");

                    b.HasOne("HomeInventory.Shared.Entities.UnitOfMeasure", "ToUOM")
                        .WithMany()
                        .HasForeignKey("ToUOMName");
                });
#pragma warning restore 612, 618
        }
    }
}
